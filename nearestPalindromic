"""
Given an integer n, find the closest integer (not including itself), which is a palindrome.

The 'closest' is defined as absolute difference minimized between two integers.

Example 1:
Input: "123"
Output: "121"
Note:
The input n is a positive integer represented by string, whose length will not exceed 18.
If there is a tie, return the smaller one as answer.
"""



class Solution(object):
    def nearestPalindromic(self, n):
        """
        :type n: str
        :rtype: str
        """
        # 由于目标为最接近的，对于数字来说，左侧数字对于数值的影响更大，则只需要考虑右侧数据
        # 但是考虑三种情况，如下：12322=>12321 12391=>12421 19321=>19291，规则为中间值+1、-1以及不变
        # 所以采用比较的方式找到最小举例的值
        l = len(n)
        
        if l == 1:
            return str(int(n)-1)
        
        middle = (l + 1) / 2
        prefix = int(n[:middle])
        
        # 999...999 or 1000..0001
        candidates = set(( "1"+"0"*(l-1)+"1", "9"*(l-1) ))
        for i in (prefix-1, prefix, prefix+1):
            x = str(i)
            candidates.add(x + [x, x[:-1]][l & 1][::-1])
        # 删除自己
        candidates.discard(n)
        return min(candidates, key=lambda x: (abs(int(x) - int(n)), int(x)))
